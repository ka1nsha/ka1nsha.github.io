<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Enes Ergün - linux</title><link href="https://enesergun.net/" rel="alternate"></link><link href="https://enesergun.net/feeds/linux.atom.xml" rel="self"></link><id>https://enesergun.net/</id><updated>2020-02-02T14:00:00+03:00</updated><subtitle>Personel homepage about of my Profession</subtitle><entry><title>Linux Capabilities API</title><link href="https://enesergun.net/linux-capabilities-api.html" rel="alternate"></link><published>2020-02-02T14:00:00+03:00</published><updated>2020-02-02T14:00:00+03:00</updated><author><name>0x656e</name></author><id>tag:enesergun.net,2020-02-02:/linux-capabilities-api.html</id><summary type="html">&lt;p&gt;Selamlar,&lt;/p&gt;
&lt;p&gt;Günlük olarak RSS feedlerimi takip etmeye özen gösteren birisiyim(Feedly). Bu feedler arasında bolca HTB(HackTheBox)  write-up kaynağı da bulunuyor doğal olarak. İşte yine bir HTB makinesi ile ilgili write-up'ı okurken bunca yıldır Linux(End-User olarak) kullanan biri olarak karşılaşmadığım ve karşılaştığımda şaşırdığım bir komut gördüm. Neydi bu komut …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Selamlar,&lt;/p&gt;
&lt;p&gt;Günlük olarak RSS feedlerimi takip etmeye özen gösteren birisiyim(Feedly). Bu feedler arasında bolca HTB(HackTheBox)  write-up kaynağı da bulunuyor doğal olarak. İşte yine bir HTB makinesi ile ilgili write-up'ı okurken bunca yıldır Linux(End-User olarak) kullanan biri olarak karşılaşmadığım ve karşılaştığımda şaşırdığım bir komut gördüm. Neydi bu komut?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;getcap -r / &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Komutu anlatmak gerekirse recursive bir biçimde &lt;code&gt;/&lt;/code&gt; yani en üst dizinden başlayarak tüm dosyaların kabiliyetlerini kontrol edecek ve eğer return code olarak &lt;code&gt;2&lt;/code&gt; kodu dönülüyorsa bunu &lt;code&gt;/dev/null&lt;/code&gt; uzayına gönderecek.&lt;/p&gt;
&lt;h2&gt;Linux Yetkilendirme Sistemleri&lt;/h2&gt;
&lt;p&gt;Bu zamana kadar genelde dosya yetkilerini kontrol ederken, sadece sembolik olan yetkilendirme sistemini kontrol ederdim. Bu sembolik yetkilendirme sistemi nedir derseniz, kendisi &lt;code&gt;chmod, chown&lt;/code&gt; komutları ile birlikte kullandığınız &lt;code&gt;octal&lt;/code&gt; numerik olarak belirtilen(sembolik) dosya yetkilendirme sistemidir.&lt;/p&gt;
&lt;p&gt;Eğer bu konu hakkında bilgi sahibi değilseniz aşağıda vermiş olduğum kaynağı, kaynağın tümünü tüketebilirsiniz. Çok güzel bir kaynaktır.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://demirten.gitbooks.io/linux-sistem-programlama/content/users/"&gt;Linux Sistem Programlama&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Peki Enes Bunlar Ne İşe Yarayacak&lt;/h2&gt;
&lt;p&gt;Öncelikle bir hacker olduğunuzu düşünün, bir linux sistemi ele geçirdiniz fakat o da ne? Sistem üzerinde Nginx'in tüm işlemleri özel bir kullanıcı ile yürütülüyor ve siz bu sistemde at koşturamıyorsunuz. Ne yapmamız gerek? Sistem üzerinde yetkimizi yükseltebileceğimiz bir şeyler aramamız gerekmekte.&lt;/p&gt;
&lt;p&gt;Ne yapabiliriz? Mesela SUID Bit içeren dosyaları arayabiliriz.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find / -perm -4000 -type f &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Tamam bir executable dosya bulduk ama bunu nasıl kullanacağımızı bilmiyoruz? İster Google üzerinde aratın ya da bu iş için çok güzel bir site hazırlamışlar ona bakabilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gtfobins.github.io/"&gt;GTFOBins&lt;/a&gt; (Linux)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lolbas-project.github.io/#"&gt;LOLBAS&lt;/a&gt; (Windows)&lt;/p&gt;
&lt;p&gt;vs.vs bir sürü senaryo üretilebilir fakat hiç dosya kapasiteleri(capabilities) aklınıza gelmiş miydi? Benim şahsen böyle bir şey olduğundan bile haberim yoktu. Zaten bu yüzden bu blog yazısının konusu bu.&lt;/p&gt;
&lt;h2&gt;Capabilities API'a Neden İhtiyaç Var&lt;/h2&gt;
&lt;p&gt;Eski kernel sürümlerinde Linux üzerinde yetkilendirme sistemi bu kadar gelişmiş değildi ve bazı kısıtlamalar yüzünden siber güvenlik açısından büyük riskler barındıran işlemler gerçekleştiriliyordu. &lt;/p&gt;
&lt;p&gt;Örnek: Linux üzerinde Port olarak 1024'ün altında bir portta socket açacaksanız &lt;code&gt;root&lt;/code&gt; kullanıcısı olmak zorundasınız. Peki sunucunuza Nginx kurdunuz ve web servisi yayınlayacaksınız. Bunu &lt;code&gt;root&lt;/code&gt; kullanıcısı olarak kurup çalıştırdığınızda geçmiş olsun. &lt;/p&gt;
&lt;p&gt;Örnek1: 1024 altında port açmak için &lt;code&gt;root&lt;/code&gt; kullanıcısına ihtiyacınız var demiştik. Peki günlük olarak troubleshooting için kullandığımız &lt;code&gt;ping&lt;/code&gt; komutu? Ping bildiğiniz üzere port kullanan bir yapıda değil ki zaten farklı bir protokol. Bknz: ICMP. Ping atabilmek için raw_socket açmak zorundasınız ve bu sadece &lt;code&gt;root&lt;/code&gt; kullanıcısına özgü bir yetki. Takılıp kaldık mı? Hayır.&lt;/p&gt;
&lt;p&gt;Bu arada ICMP temelli çalışan fakat işletim sistemine göre değişen &lt;code&gt;traceroute&lt;/code&gt; ile ilgili aşağıya güzel bir link iliştiriyorum.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@gokhansengun/ping-ve-traceroute-nas%C4%B1l-%C3%A7al%C4%B1%C5%9F%C4%B1r-146e151ff83b"&gt;ping ve traceroute nasıl çalışır&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Neyse devam. İşte bu kısımda takılıp kalmıyoruz SUID Bit devreye giriyor. Bu da ayrı bir yazı konusu aslında o yüzden direkt olarak size konu ile ilgili link vereceğim.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.syslogs.org/suid-ve-sgid-bitler-ve-bu-bitlere-sahip-dosyalarin-bulunmasi/"&gt;SUID ve SGID Bit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tamam bunu okuduk ama diğer taraftan aşağıdakini de okumakta fayda var.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://canyoupwn.me/tr-suid-bit-istismari/"&gt;SUID Bit İstismarı&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Evet zararlı kısmını da gösterdik. Şimdi konu gerçekten Capabilities API'a geldi. Şu an kullandığınız distroda ping komutunun nasıl çalıştığına(yetkisiz kullanıcı ile) baktınız mı hiç?&lt;/p&gt;
&lt;p&gt;Hadi yetkilerine bakalım. Direkt olarak komutları ve çıktılarını aşağıya kopyalıyorum. Sonra üstünde konuşacağız.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;➜  /bin ls -la &lt;span class="p"&gt;|&lt;/span&gt; grep ping
-rwxr-xr-x  &lt;span class="m"&gt;1&lt;/span&gt; root root          &lt;span class="m"&gt;75760&lt;/span&gt; Jan  &lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;2019&lt;/span&gt; atk6-thcping6
-rwxr-xr-x  &lt;span class="m"&gt;1&lt;/span&gt; root root          &lt;span class="m"&gt;48032&lt;/span&gt; Aug  &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;02&lt;/span&gt;:48 fping
lrwxrwxrwx  &lt;span class="m"&gt;1&lt;/span&gt; root root              &lt;span class="m"&gt;5&lt;/span&gt; Jan  &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;:47 fping6 -&amp;gt; fping
-rwxr-xr-x  &lt;span class="m"&gt;1&lt;/span&gt; root root         &lt;span class="m"&gt;106344&lt;/span&gt; Jul &lt;span class="m"&gt;14&lt;/span&gt;  &lt;span class="m"&gt;2019&lt;/span&gt; l2ping
-rwxr-xr-x  &lt;span class="m"&gt;1&lt;/span&gt; root root          &lt;span class="m"&gt;43248&lt;/span&gt; Oct &lt;span class="m"&gt;23&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt;:53 mate-typing-monitor
-rwxr-xr-x  &lt;span class="m"&gt;1&lt;/span&gt; root root         &lt;span class="m"&gt;752656&lt;/span&gt; Nov &lt;span class="m"&gt;26&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt;:21 nping
-rwxr-xr-x  &lt;span class="m"&gt;1&lt;/span&gt; root root          &lt;span class="m"&gt;73496&lt;/span&gt; Oct  &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;:34 ping
lrwxrwxrwx  &lt;span class="m"&gt;1&lt;/span&gt; root root              &lt;span class="m"&gt;4&lt;/span&gt; Oct  &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;:34 ping4 -&amp;gt; ping
lrwxrwxrwx  &lt;span class="m"&gt;1&lt;/span&gt; root root              &lt;span class="m"&gt;4&lt;/span&gt; Oct  &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;:34 ping6 -&amp;gt; ping
-rwxr-xr-x  &lt;span class="m"&gt;1&lt;/span&gt; root root           &lt;span class="m"&gt;6773&lt;/span&gt; May &lt;span class="m"&gt;21&lt;/span&gt;  &lt;span class="m"&gt;2019&lt;/span&gt; wifiping
➜  /bin id
&lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;ka1&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;ka1&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;groups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;ka1&lt;span class="o"&gt;)&lt;/span&gt;,20&lt;span class="o"&gt;(&lt;/span&gt;dialout&lt;span class="o"&gt;)&lt;/span&gt;,24&lt;span class="o"&gt;(&lt;/span&gt;cdrom&lt;span class="o"&gt;)&lt;/span&gt;,25&lt;span class="o"&gt;(&lt;/span&gt;floppy&lt;span class="o"&gt;)&lt;/span&gt;,27&lt;span class="o"&gt;(&lt;/span&gt;sudo&lt;span class="o"&gt;)&lt;/span&gt;,29&lt;span class="o"&gt;(&lt;/span&gt;audio&lt;span class="o"&gt;)&lt;/span&gt;,30&lt;span class="o"&gt;(&lt;/span&gt;dip&lt;span class="o"&gt;)&lt;/span&gt;,44&lt;span class="o"&gt;(&lt;/span&gt;video&lt;span class="o"&gt;)&lt;/span&gt;,46&lt;span class="o"&gt;(&lt;/span&gt;plugdev&lt;span class="o"&gt;)&lt;/span&gt;,109&lt;span class="o"&gt;(&lt;/span&gt;netdev&lt;span class="o"&gt;)&lt;/span&gt;,119&lt;span class="o"&gt;(&lt;/span&gt;debian-tor&lt;span class="o"&gt;)&lt;/span&gt;,126&lt;span class="o"&gt;(&lt;/span&gt;bluetooth&lt;span class="o"&gt;)&lt;/span&gt;,136&lt;span class="o"&gt;(&lt;/span&gt;scanner&lt;span class="o"&gt;)&lt;/span&gt;,998&lt;span class="o"&gt;(&lt;/span&gt;docker&lt;span class="o"&gt;)&lt;/span&gt;
➜  /bin ping &lt;span class="m"&gt;8&lt;/span&gt;.8.8.8
PING &lt;span class="m"&gt;8&lt;/span&gt;.8.8.8 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;.8.8.8&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;56&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;84&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; bytes of data.
&lt;span class="m"&gt;64&lt;/span&gt; bytes from &lt;span class="m"&gt;8&lt;/span&gt;.8.8.8: &lt;span class="nv"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;54&lt;/span&gt; &lt;span class="nv"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;.4 ms
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Gördüğünüz gibi ping komutu &lt;code&gt;root:root&lt;/code&gt; olarak yetkilendirilmiş bir biçimde üstelik herhangi bir &lt;code&gt;SUID Bit vb.&lt;/code&gt; bir şey de yok fakat ben nasıl çalıştırabiliyorum?&lt;/p&gt;
&lt;p&gt;Yine terminal çıktısı atayım.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
➜  /bin sudo getcap /usr/bin/ping
/usr/bin/ping = cap_net_raw+ep
➜  /bin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Gördüğünüz gibi &lt;code&gt;ping&lt;/code&gt; çalıştırılabilir dosyasında bir kapasite sınırı sonunda + olarak belirtilmiş bir yetkilendirme biçimi var.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Not:&lt;/strong&gt; Ping komutunun artık kullanıcı tarafında çalıştırılabilmesi için herhangi bir izne ihtiyacı yok. Sebebi ping socketinin direkt olarak kernela eklenmesi.(Ben öyle anladım?)&lt;/p&gt;
&lt;p&gt;Kaynak: &lt;a href="https://github.com/torvalds/linux/commit/c319b4d76b9e583a5d88d6bf190e079c4e43213d"&gt;      net: ipv4: add IPPROTO_ICMP socket kind    &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Capabilities API&lt;/h2&gt;
&lt;p&gt;Öncelik olarak Kernel sürümümüze özel olarak sistem üzerinde ne kadar farklı yetkilendirme yapabileceğimize bakalım. (Tüm Capabilities Yetkilerine)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;➜  ~ sudo capsh --print
Current: &lt;span class="o"&gt;=&lt;/span&gt; cap_chown,cap_dac_override,cap_dac_read_search,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_linux_immutable,cap_net_bind_service,cap_net_broadcast,cap_net_admin,cap_net_raw,cap_ipc_lock,cap_ipc_owner,cap_sys_module,cap_sys_rawio,cap_sys_chroot,cap_sys_ptrace,cap_sys_pacct,cap_sys_admin,cap_sys_boot,cap_sys_nice,cap_sys_resource,cap_sys_time,cap_sys_tty_config,cap_mknod,cap_lease,cap_audit_write,cap_audit_control,cap_setfcap,cap_mac_override,cap_mac_admin,cap_syslog,cap_wake_alarm,cap_block_suspend,cap_audit_read+ep
Bounding &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;cap_chown,cap_dac_override,cap_dac_read_search,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_linux_immutable,cap_net_bind_service,cap_net_broadcast,cap_net_admin,cap_net_raw,cap_ipc_lock,cap_ipc_owner,cap_sys_module,cap_sys_rawio,cap_sys_chroot,cap_sys_ptrace,cap_sys_pacct,cap_sys_admin,cap_sys_boot,cap_sys_nice,cap_sys_resource,cap_sys_time,cap_sys_tty_config,cap_mknod,cap_lease,cap_audit_write,cap_audit_control,cap_setfcap,cap_mac_override,cap_mac_admin,cap_syslog,cap_wake_alarm,cap_block_suspend,cap_audit_read
Ambient &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
Securebits: &lt;span class="m"&gt;00&lt;/span&gt;/0x0/1&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;b0
 secure-noroot: no &lt;span class="o"&gt;(&lt;/span&gt;unlocked&lt;span class="o"&gt;)&lt;/span&gt;
 secure-no-suid-fixup: no &lt;span class="o"&gt;(&lt;/span&gt;unlocked&lt;span class="o"&gt;)&lt;/span&gt;
 secure-keep-caps: no &lt;span class="o"&gt;(&lt;/span&gt;unlocked&lt;span class="o"&gt;)&lt;/span&gt;
 secure-no-ambient-raise: no &lt;span class="o"&gt;(&lt;/span&gt;unlocked&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;root&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;root&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;groups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;root&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Gördüğünüz gibi yetkileri görmek için &lt;code&gt;capsh --print&lt;/code&gt; komutunu kullanabilirsiniz. Daha detaylı bir kullanım için: &lt;/p&gt;
&lt;p&gt;&lt;a href="http://man7.org/linux/man-pages/man1/capsh.1.html"&gt;Capsh manpages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bir dosyaya ait kapasiteyi öğrenmek için de&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo getcap dosya&lt;/code&gt; komutunu kullanabilirsiniz. &lt;/p&gt;
&lt;p&gt;Ping komutuna getcap ile baktığımızda yetkilendirme sonrasında +ep olarak bir şey görmüştük peki bu ifadeler neydi diye görmek isterseniz aşağıdaki tabloya bakabilirsiniz. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Not:&lt;/strong&gt; Direkt olarak &lt;a href="https://demirten.gitbooks.io/linux-sistem-programlama/content/capabilities/"&gt;buradan&lt;/a&gt; kopyalanmıştır.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Capability&lt;/th&gt;
&lt;th align="left"&gt;Açıklama&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;permitted&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;Bu kümede ilgili process'in izin verilen ek  capability listesi bulunur. İzin verilmesi o an aktif olarak  kullanılabileceği anlamına gelmeyebilir, ek bir işlemle buradaki  yetkilerin etkin (effective) capability kümesine dahil edilmesi  mümkündür.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;effective&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;İlgili process'in o anki etkin capability  listesini gösterir. Capability sistemini düzenleyen yardımcı  fonksiyonlarla bir capability'den vazgeçilebileceği gibi tekrar geri de  alınabilir. Ancak her durumda bu işlem sadece &lt;em&gt;permitted&lt;/em&gt; grubunda zaten izin verilmiş olanlar arasından yapılabilir.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;strong&gt;inheritable&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;Process tarafından yeni bir process çalıştırıldığında, yeni çalıştırılan process'in &lt;em&gt;permitted&lt;/em&gt; listesine miras yoluyla aktarılacak capability listesini gösterir.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;capsh&lt;/code&gt; ile gördüğümüz bir sürü yetkilendirme ne işe yarıyor peki derseniz onunla ilgili de aşağıdaki sayfayı kullanabilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://man7.org/linux/man-pages/man7/capabilities.7.html"&gt;Capabilities man pages&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Bitiş&lt;/h2&gt;
&lt;p&gt;Bu yazıda amacım derin bir biçimde &lt;code&gt;Capabilities API&lt;/code&gt; ı incelemek değildi bu sebeple ilgili yazıyı yetersiz bulmuş olabilirsiniz. Amacım tamamen bakın böyle bir şey de varmış. Şuraya, buraya bakabilirsiniz veya hacklediğiniz bir sistemde bakabileceğiniz bir kapı daha açabilmektedir. Yorumlarınızı site üzerinden (Disqus) veya Twitter üzerinden &lt;a href="https://twitter.com/0x656e"&gt;0x656e&lt;/a&gt; yapabilirsiniz. Olumlu olumsuz benim için farketmez.&lt;/p&gt;
&lt;p&gt;Yazı sonuna geldik. Evet bu yazının hazırlanmasında okuduğum, kullandığım linkleri aşağıda referanslar olarak görebilirsiniz. Bir klasik olarak yazı sonu şarkı paylaşımlarıma da aşağıdan ulaşabilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=DdcusOXh_f8" title=""&gt;&lt;img alt="" src="http://img.youtube.com/vi/DdcusOXh_f8/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=iIwNthexyNM" title=""&gt;&lt;img alt="" src="http://img.youtube.com/vi/iIwNthexyNM/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Referanslar:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://linux-audit.com/linux-capabilities-101/"&gt;Linux Capabilities 101&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://demirten.gitbooks.io/linux-sistem-programlama/content/capabilities/"&gt;Linux Sistem Programlama Capabilities&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xrick.github.io/hack-the-box/waldo/"&gt;HTB Waldo Writeup&lt;/a&gt;&lt;/p&gt;</content><category term="linux"></category><category term="Capabilities API Türkçe"></category><category term="Linux Yetkilendirme"></category><category term="SUID Bit İstismarı"></category><category term="Linux Yetki Yükseltme"></category><category term="Capabilities Nedir"></category><category term="Linux Capabilities Nedir"></category><category term="Linux Yetkilendirme Sistemleri"></category></entry><entry><title>Linux Üzerinde Kullandığım ve Tavsiye Ettiğim Uygulamalar</title><link href="https://enesergun.net/linux-uzerinde-kullandigim-uygulamalar.html" rel="alternate"></link><published>2019-05-03T20:00:00+03:00</published><updated>2019-05-03T20:00:00+03:00</updated><author><name>0x656e</name></author><id>tag:enesergun.net,2019-05-03:/linux-uzerinde-kullandigim-uygulamalar.html</id><summary type="html">&lt;p&gt;Selamlar, &lt;/p&gt;
&lt;p&gt;Uzun süredir kendimi oyunlara verdiğimden dolayı kendimi geliştirmek adına bir şey yapmadığımı farkettim, belki de daha önce farkettim ama ihtiyacım vardı bilemiyorum. Bu sebeple 3 gün önce radikal bir karar alarak Windows sistemimi geri gelmeyecek şekilde (diskimi 0 ile dolduracak şekilde) sildim. Hoş SSD için böyle bir data destruction'a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Selamlar, &lt;/p&gt;
&lt;p&gt;Uzun süredir kendimi oyunlara verdiğimden dolayı kendimi geliştirmek adına bir şey yapmadığımı farkettim, belki de daha önce farkettim ama ihtiyacım vardı bilemiyorum. Bu sebeple 3 gün önce radikal bir karar alarak Windows sistemimi geri gelmeyecek şekilde (diskimi 0 ile dolduracak şekilde) sildim. Hoş SSD için böyle bir data destruction'a gerek var mı bilmiyorum fakat yaptım. Hatta öyle bir radikal karar ki şuan kullandığım sisteme Steam'e dair herhangi bir şey kurmadım.&lt;/p&gt;
&lt;p&gt;Velhasılkelam. Sistem olarak herkes tarafından linç yediğim bir dağıtım kurdum(Kali). Tabi gerekli ayarlamaları yaparak. Neden kali kurdum sorusuna gelirsek:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hackthebox ile uğraşmak istiyorum.&lt;/li&gt;
&lt;li&gt;Sanalda bir sistem kullanmaktan nefret ediyorum.&lt;/li&gt;
&lt;li&gt;İhtiyacım olabilecek her şeyin elimin altında olmasını istiyorum. (Toollar)&lt;/li&gt;
&lt;li&gt;Uygulamaları tek tek kurmak istemiyorum (GOTO [2] veya direkt 1 den başlıyorsanız GOTO[3])&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Girizgahı geçelim. Bu yazıyı neden yazdım? Hem kendi işlerim için kullandığım (Pentest harici onlar başka bir yazı konusu) hemde yeni görüp beğendiğim yazılımları paylaşmak istedim.&lt;/p&gt;
&lt;h2&gt;Yeni Neler Buldum&lt;/h2&gt;
&lt;h3&gt;Flog&lt;/h3&gt;
&lt;p&gt;Kendisi GOLang ile yazılmış bir araç olmak ile birlikte bir çok standart formatta sahte log üretebiliyor. Bu sahte loglar geliştirdiğimiz uygulamalar için yararlı olabiliyor veya ihtiyacımız olduğunda bu şekilde log üretebiliyor olmamız mükemmel bir şey. Eğer Log'lar üzerinde bir iş veya proje yapıyorsanız kesinlikle kullanmalısınız.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mingrammer/flog"&gt;Flog Github Linki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Glances&lt;/h3&gt;
&lt;p&gt;Kendisi htop gibi bir monitoring aracı fakat biraz daha gelişmiş ve işlevsel hali. Aklınıza gelebilecek temel sistemleri izliyor. Bunlar Disk I/O, Network, Processler, Memory durumu, Swap durumu, System load durumu gibi şeyler.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nicolargo.github.io/glances/"&gt;Glances Official Sitesi&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Flameshot&lt;/h3&gt;
&lt;p&gt;Kendisi benim bundan sonra vazgeçilmezim olacak bir screenshooter yazılımı. Bundan önce XFCE üzerinde kendi screenshooter'ı olan xfce4-screenshooter'ı kullanmakla birlikte onun yetersiz geldiği yerlerde Shutter kullanıyordum fakat Shutter'dan nedense nefret ediyordum. İşte şuan imdadıma &lt;code&gt;Flameshot&lt;/code&gt; yetişti.&lt;/p&gt;
&lt;p&gt;Kendisi Windows üzerinde kullandığım &lt;code&gt;Greenshot&lt;/code&gt; uygulamasının bir çok özelliğine sahip üstelik bunu SS aldığınız yerde yapıyorsunuz, başka herhangi bir pencere ile uğraşmıyorsunuz.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bu arada xfce4-screenshooter'ın Telegram'a resim gönderirken donma sorununun allah belasını versin.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/lupoDharkael/flameshot"&gt;FlameShot Github Linki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Kupfer&lt;/h3&gt;
&lt;p&gt;Kendisi bir uygulama başlatıcı. XFCE4 sistemlerde ben genellikle start menüyü kullanmayı sevmiyordum. Mouse'u oraya götür uygulamayı bul tıkla bana zor geliyordu bu sebeple &lt;code&gt;xfce4-appfinder&lt;/code&gt;  uygulamasını kullanıyordum. Öyle muhabbet ortasında konuşurken &lt;code&gt;1v3m&lt;/code&gt; adlı arkadaşa &lt;code&gt;erfur&lt;/code&gt; &lt;code&gt;kupfer&lt;/code&gt; diye bir uygulama önermiş. Sağolsun &lt;code&gt;1v3m&lt;/code&gt; de bana önerdi. (Amma çok mention oldu.) Kendisini severek kullanmaktayız efendim. Tavsiye ederiz.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://kupferlauncher.github.io/"&gt;Kupfer Github Linki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Cheat&lt;/h3&gt;
&lt;p&gt;Kendisi, terminal üzerinde kendi cheatsheetlerimizi hazırlamaya yarayan bir araç. Tabi kendi içerisinde de bir sürü cheatsheet default olarak bulunuyor. Bunları home klasörünüz altında &lt;code&gt;cheat&lt;/code&gt; klasörüne atarsanız terminalden &lt;code&gt;cheat bash&lt;/code&gt; yazdığınızda size vermiş olduğunuz argümana göre cheatsheet gösteriyor. Gayet güzel bir uygulama&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cheat/cheat"&gt;Cheat Github Linki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Add-Gitignore&lt;/h3&gt;
&lt;p&gt;Kendisi seçtiğimiz argümanlara göre bir &lt;code&gt;.gitignore&lt;/code&gt; dosyasını bulunduğunuz dizine bırakıveriyor. Argüman olarak vermeyip uygulama içerisinden seçmeniz gerekiyor bunu belirtmeme gerek yok umarım. Birden fazla argüman alabiliyor.&lt;/p&gt;
&lt;p&gt;Örnek:&lt;/p&gt;
&lt;p&gt;&lt;img alt="add-gitignore demo" src="https://raw.githubusercontent.com/TejasQ/add-gitignore/master/demo.gif"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/TejasQ/add-gitignore"&gt;Add-Gitignore Github Linki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Joplin&lt;/h3&gt;
&lt;p&gt;Kendisi bir not alma uygulaması ve Dropbox üzerinde çalışıyor bu sayede tüm cihazlarınızda senkronize bir şekilde note alabiliyorsunuz. Benzer ama daha basit ve web üzerinden çalışan bir uygulama için &lt;code&gt;hackmd&lt;/code&gt; 'ye  bakabilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://joplinapp.org/"&gt;Joplin Official Site&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Translate-Shell&lt;/h3&gt;
&lt;p&gt;Terminal üzerinden Google Translate kullanmanıza yarayan basit ama etkili bir araç. Çok fazla bir açıklama girme gereği duymuyorum.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/soimort/translate-shell"&gt;Translate-Shell Github Linki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Qucs-s&lt;/h3&gt;
&lt;p&gt;Kendisi elektronik devre simulasyon uygulaması. Henüz kullanma fırsatım olmadı ama umarım olacaktır. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://ra3xdh.github.io/"&gt;Qucs-s Official Site&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;fsearch&lt;/h3&gt;
&lt;p&gt;Kendisi sistem üzerinde hızlıca dosya arayıp bulmamıza olanak sağlayan bir çok özelliği(Örn:Regex) olan bir arama aracı.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cboxdoerfer/fsearch"&gt;fsearch Github Linki&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Daha önce kullandığım ve yüklediğim uygulamalar/araçlar&lt;/h2&gt;
&lt;h3&gt;XMind&lt;/h3&gt;
&lt;p&gt;Kendisi beyin haritalama uygulaması, ben proje geliştirirken bu tür uygulamalar kullanıyorum.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.xmind.net/zen/"&gt;X-Mind Official Site&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Fish Shell&lt;/h3&gt;
&lt;p&gt;Önceden ne kadar zsh kullansamda artık Fish-shell kullanıyorum. Kendisinin otomatik tamamlama vs gibi özellikleri muazzam.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fishshell.com/"&gt;Fish-Shell Official Site&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Fisher&lt;/h3&gt;
&lt;p&gt;Fish-shell için bir paket yöneticisi.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jorgebucaran/fisher"&gt;Fisher Github Linki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;HTTPie&lt;/h3&gt;
&lt;p&gt;Kendisi CLI üzerinden HTTP Client görevini sağlıyor. Tıpkı cURL gibi ama daha insancılı. Gayet başarılı bir uygulama. API'lara vs istek atarken sıkça kullanabilirsiniz. &lt;/p&gt;
&lt;p&gt;&lt;img alt="httpie demo" src="https://raw.githubusercontent.com/jakubroztocil/httpie/master/httpie.gif"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jakubroztocil/httpie"&gt;HTTPie Github Linki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;QuiteRSS&lt;/h3&gt;
&lt;p&gt;Kendisi bir RSS Feeder. Sevgili &lt;code&gt;Emir&lt;/code&gt;'in tavsiyesi üzerine kullanmaya başladım.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://quiterss.org/"&gt;QuiteRSS Official Site&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;tldr&lt;/h3&gt;
&lt;p&gt;Kendisini yukarıda bahsetmiş olduğum &lt;code&gt;cheat&lt;/code&gt; aracı ile &lt;code&gt;man&lt;/code&gt; komutunun ortaya karışımı gibi düşünebilirsiniz. Herhangi bir komut hakkında size bilgi ve örnekler gösteriyor. Tl-dr'ı başka nasıl açıklayabilirim bilmiyorum.&lt;/p&gt;
&lt;p&gt;Örnek bir ekran görüntüsü:&lt;/p&gt;
&lt;p&gt;&lt;img alt="tldr" src="https://raw.githubusercontent.com/tldr-pages/tldr/master/screenshot.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/tldr-pages/tldr"&gt;TL-DR Github Linki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;fx&lt;/h3&gt;
&lt;p&gt;Kendisi bir JSON aracı. Terminal üzerinde Pipe ile verdiğiniz json çıktısı üzerinde gezmenize olanak sağlıyor. Sürekli API, JSON çıktıları ile uğraşıyorsanız işinize yarayacak bir araç olacaktır. Biliyorum bir çok alternatifi var ama ben bunu kullanıyorum. :)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/antonmedv/fx"&gt;FX Github Linki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Typora&lt;/h3&gt;
&lt;p&gt;Geldik bu yazıyı yazdığım editöre. Kendisi bir markdown editor. Yazdığınız anda bulunduğunuz sayfada Markdown'ı render ediyor ve o göz karmaşasından kurtuluyorsunuz. Kendisini severek kullanıyoruz efendim. Basit ve güzel bir arayüz kullanma nedenlerim arasında tabi ki.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://typora.io/"&gt;Typora Official Site&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;DBeaver&lt;/h3&gt;
&lt;p&gt;Kullanmayan kaldı mı ya bunu? Kendisi bir çok DBMS'e bağlantı kurmanıza olanak sağlayan bir Database yöneticisi. Java ile yazılmış. Sanırım tek sevmediğim tarafı bu. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://dbeaver.io/"&gt;DBeaver Official Site&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Ascicinema&lt;/h3&gt;
&lt;p&gt;Kendisini uzun zamandır biliyordum fakat script veya projelerimde hiç kullanmamıştım. Kullanmak nasip oldu. Terminal üzerinde kayıt almanıza ve bu kayıdı paylaşmanıza olanak sağlayan mükemmel bir uygulama. Linkini aşağıda paylaşıyor olacağım. Kullanmak için kayıt olmanız gerekmekte. Kayıt olduktan sonra bir link ile siz olduğunuzu doğruluyorsunuz ve record edip direkt olarak upload edebiliyorsunuz. Kullanımı çok rahat ve pratik. Örnek bir kullanımımı aşağıda görebilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://asciinema.org/a/oRY2H6RUf87aCN2xpNngFQ0iX"&gt;&lt;img alt="Örnek kullanım" src="https://asciinema.org/a/oRY2H6RUf87aCN2xpNngFQ0iX.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://asciinema.org/"&gt;Asciicinema&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Aslında kurmuş, bulmuş olduğum transfer.sh adlı bir uygulama daha mevcut fakat sanırım sistemlerde bir problem var ve çalışmıyor. İlgili tool terminal üzerinden dosya paylaşmanıza olanak sağlayan bir uygulama. &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Geldik yazının sonuna. Bundan sonraki yazım muhtelemelen güvenlik araçları ile ilgili olacaktır.&lt;/p&gt;
&lt;p&gt;Benim için bir gelenek olan yazı sonu şarkımı aşağıya iliştiriyorum. &lt;/p&gt;
&lt;p&gt;Oldukça sert ve protest olarak nitelendirdiğim bu şarkıyı umarım keyifle dinlersiniz :)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=J-KUtPPlUqs" title="saian &amp;lt;3"&gt;&lt;img alt="Saian K&amp;quot;st Uçurum Çiçeği" src="http://img.youtube.com/vi/J-KUtPPlUqs/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="linux"></category><category term="linux kurulum sonrası"></category><category term="linux tavsiye uygulamalar"></category><category term="yazılımcılar için linux"></category><category term="en güzel linux uygualamaları"></category></entry><entry><title>PS Komutunun Alabildiği Argümanlar</title><link href="https://enesergun.net/ps-command-arguments.html" rel="alternate"></link><published>2018-02-10T22:19:00+03:00</published><updated>2018-02-10T22:19:00+03:00</updated><author><name>0x656e</name></author><id>tag:enesergun.net,2018-02-10:/ps-command-arguments.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; komutu linux üzerinde processleri ( çalışan işlemleri ) monitoring edebileceğimiz bir komuttur. Pek tabi ki bir çok argüman almaktadır. Şimdi bu argümanların en çok kullanılanlarına aşağıda bahsedeceğiz. PS komutu çıktıları bir çok formatta olabiliyor. İyi okumalar.&lt;/p&gt;
&lt;h3&gt;Let's go&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NOT&lt;/strong&gt;: Önce komutu gösterip daha sonra komutu açıklayacağım bilginize.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -A
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Bu komut …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; komutu linux üzerinde processleri ( çalışan işlemleri ) monitoring edebileceğimiz bir komuttur. Pek tabi ki bir çok argüman almaktadır. Şimdi bu argümanların en çok kullanılanlarına aşağıda bahsedeceğiz. PS komutu çıktıları bir çok formatta olabiliyor. İyi okumalar.&lt;/p&gt;
&lt;h3&gt;Let's go&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NOT&lt;/strong&gt;: Önce komutu gösterip daha sonra komutu açıklayacağım bilginize.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -A
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Bu komut varsayılan olarak &lt;strong&gt;Linux formatında&lt;/strong&gt; çalışan processleri bizlere döndürür. Bu processlerde bizlere PID, hangi TTY'de çalıştığını, zamanını  ve hangi processin çalıştığını bizlere gösterir. Mesela benim ekran görüntümde tty7'de Xorg çalışıyor.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="/images/psa1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps au
ps axu
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Yukarıda ki komutun çıktıları &lt;strong&gt;BSD&lt;/strong&gt;  formatında olur. Bu formatta Kullanıcı, PID numarası, kullandığı işlemci yüzdesi, kullandığı ram yüzdesi, VSZ değeri, RSS değeri, TTY değeri, İşlemin durumu, zamanını ve komutunun çıktısını verir.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;VSZ&lt;/strong&gt; : Bir işlemin kullanacağı, kullanabileceği sanal bellek miktarıdır.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RSS&lt;/strong&gt; : Bu işleme tahsis edilen fiziksel bellek miktarıdır.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/psaux1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -eF
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Yukarıda ki komut full çıktı modudur. Bu çıktıda sizlere UID, PID, PPID, C, SZ, RSS, PSR, STIME, TTY, TIME, CMD değerleri döner.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -fU ka1
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Bu komut ile adını verdiğiniz kullanıcıya ait processleri görebilirsiniz.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="/images/psfu1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -U root -u root
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Bu komut ile root kullanıcı tarafından çalıştırılan tüm processleri görebilirsiniz.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -fG postgres
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Bu komut ile bir gruba ait tüm çalışan processleri görebilirsiniz. Bu ne demektir? Mesela web diye bir kullanıcı grubunuz var ve bunun altında nginx/gunicorn/celery bulunuyor. Siz direkt olarak bu şekilde çalışan processleri görebilirsiniz.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="/images/psfg1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -fp PID
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Bu komut ile PID değerini verdiğiniz process veya processleri görebilirsiniz. Burada tekli veya çoklu seçim yapabilirsiniz.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -ft tty1
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Bu komut ile o TTY'de çalıştırılan komutları görebilirsiniz.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -aux --forest
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Bu komut ile yukarıda bahsetmiş olduğumuz &lt;strong&gt;BSD&lt;/strong&gt; tarzında bir çıktı alırsınız fakat burada ki tek fark processlerin parent-child ( aslında forest/treeview )  ilişkileri bu çıktı içerisinde gösterilir.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="/images/psforest1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -eo user,%cpu
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Bu komut ile PS çıktısını kendinize göre özelleştirebilirsiniz. Ben yukarıda ki komutta processin hangi kullanıcı tarafından çalıştırıldığını ve yüzde kaç CPU kullandığını görmek istedim.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="/images/pschangeoutput1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -eo user,%cpu,command,%mem --sort&lt;span class="o"&gt;=&lt;/span&gt;-%mem &lt;span class="p"&gt;|&lt;/span&gt;  head
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Bu komut ile ps komutu çıktısını sıralayabilirsiniz. Burada -%mem en fazla RAM Kullanan processleri ekrana yazdıracaktır. En az kullananları isterseniz %mem yazabilirsiniz.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="/images/pssort1.png"&gt;&lt;/p&gt;</content><category term="linux"></category><category term="ps cheatsheet"></category><category term="process monitoring on linux"></category><category term="ps aux"></category></entry></feed>